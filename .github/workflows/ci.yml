name: Continuous Integration

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:

  # Lint and format check
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v5

  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v2
  #       with:
  #         bun-version: latest

  #     - name: Setup Rust
  #       uses: dtolnay/rust-toolchain@stable
  #       with:
  #         components: rustfmt, clippy

  #     - name: Cache Rust dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cargo/registry
  #           ~/.cargo/git
  #           ~/.cargo/index
  #           src-tauri/target
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
  #           ${{ runner.os }}-cargo-

  #     - name: Cache Bun dependencies
  #       uses: actions/cache@v4
  #       with:
  #         path: node_modules
  #         key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
  #         restore-keys: |
  #           ${{ runner.os }}-bun-

  #     - name: Install Bun dependencies
  #       run: bun install

  #     - name: Run Biome linting
  #       run: bun run biome check src/

  #     - name: Check Rust formatting
  #       run: cargo fmt --all -- --check
  #       working-directory: src-tauri

  #     - name: Run Clippy
  #       run: cargo clippy --all-targets --all-features -- -D warnings
  #       working-directory: src-tauri

  # Test frontend
  test-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Bun dependencies
        run: bun install

      - name: Build frontend
        run: bun run build

  # Test Rust backend
  test-rust:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/index
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
            ${{ runner.os }}-cargo-

      - name: Download dynamic libraries
        run: make download-dylibs

      - name: Create symlinks
        run: make create-symlink

      - name: Check Rust code
        run: |
          cd src-tauri
          cargo check

